{"ast":null,"code":"import { __rest } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.mjs';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.mjs';\nvar framesync = function framesync(update) {\n  var passTimestamp = function passTimestamp(_ref) {\n    var delta = _ref.delta;\n    return update(delta);\n  };\n  return {\n    start: function start() {\n      return sync.update(passTimestamp, true);\n    },\n    stop: function stop() {\n      return cancelSync.update(passTimestamp);\n    }\n  };\n};\nfunction animate(_a) {\n  var _b, _c;\n  var from = _a.from,\n    _a$autoplay = _a.autoplay,\n    autoplay = _a$autoplay === void 0 ? true : _a$autoplay,\n    _a$driver = _a.driver,\n    driver = _a$driver === void 0 ? framesync : _a$driver,\n    _a$elapsed = _a.elapsed,\n    elapsed = _a$elapsed === void 0 ? 0 : _a$elapsed,\n    _a$repeat = _a.repeat,\n    repeatMax = _a$repeat === void 0 ? 0 : _a$repeat,\n    _a$repeatType = _a.repeatType,\n    repeatType = _a$repeatType === void 0 ? \"loop\" : _a$repeatType,\n    _a$repeatDelay = _a.repeatDelay,\n    repeatDelay = _a$repeatDelay === void 0 ? 0 : _a$repeatDelay,\n    onPlay = _a.onPlay,\n    onStop = _a.onStop,\n    onComplete = _a.onComplete,\n    onRepeat = _a.onRepeat,\n    onUpdate = _a.onUpdate,\n    options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n  var to = options.to;\n  var driverControls;\n  var repeatCount = 0;\n  var computedDuration = options.duration;\n  var latest;\n  var isComplete = false;\n  var isForwardPlayback = true;\n  var interpolateFromNumber;\n  var animator = detectAnimationFromOptions(options);\n  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n  var animation = animator(Object.assign(Object.assign({}, options), {\n    from: from,\n    to: to\n  }));\n  function repeat() {\n    repeatCount++;\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n    if (!isComplete) {\n      var state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n    if (isComplete) {\n      if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n  autoplay && play();\n  return {\n    stop: function stop() {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\nexport { animate };","map":{"version":3,"names":["__rest","detectAnimationFromOptions","sync","cancelSync","interpolate","hasRepeatDelayElapsed","reverseElapsed","loopElapsed","framesync","update","passTimestamp","_ref","delta","start","stop","animate","_a","_b","_c","from","_a$autoplay","autoplay","_a$driver","driver","_a$elapsed","elapsed","_a$repeat","repeat","repeatMax","_a$repeatType","repeatType","_a$repeatDelay","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","options","to","driverControls","repeatCount","computedDuration","duration","latest","isComplete","isForwardPlayback","interpolateFromNumber","animator","needsInterpolation","call","clamp","animation","Object","assign","flipTarget","complete","state","next","Math","max","value","done","play"],"sources":["/home/vasanthakumaaran/Personal-Portfolio-React/node_modules/popmotion/dist/es/animations/index.mjs"],"sourcesContent":["import { __rest } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.mjs';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.mjs';\n\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options.duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator(Object.assign(Object.assign({}, options), { from, to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}